% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotlyMesh.R
\name{plotlyMesh}
\alias{plotlyMesh}
\title{A layout for plotly graphs}
\usage{
plotlyMesh(meshExample, meshColors = NULL, meshCellcenter = NULL,
  defaultColor = list("#CCCCFF", 0.2))
}
\arguments{
\item{meshExample}{Mesh loaded with the modified_read.ply function.}

\item{meshColors}{To display colored on the mesh.}

\item{meshCellcenter}{To display the center of (biological) cells on the mesh.}

\item{defaultColor}{Hex code of color to give by default to the mesh as well as percentage of opacity.}
}
\value{
plotly graph
}
\description{
This function provides a basic layout for plotly graphs used to display MGX meshes.
}
\examples{
\dontrun{

The data used below were generated with the package mgx2r.

# With a color per (biologica) cell:

myMesh <- readRDS(system.file("extdata",
 "mgx/2013-02-12_LTi6B_dis_A_T0_cells_minW1_normalMesh_full.rds",
  package = "cellviz3d"))
myCellGraph <- readRDS(system.file("extdata",
 "mgx/2013-02-12_LTi6B_dis_A_T0_cells_minW1_cellGraph_full.rds",
  package = "cellviz3d"))

meshCellcenter <- myCellGraph$vertices[,c("label","x", "y", "z")]

plotlyMesh(meshExample = myMesh,
meshColors = myMesh$allColors$Col_label,
meshCellcenter = meshCellcenter)

# With a uniform mesh color:
plotlyMesh(meshExample = myMesh,
meshCellcenter = meshCellcenter) \%>\%
layout(scene =
list(aspectmode = "data"))

# With a heatmap

p2 <- plotlyMesh(meshExample = myMesh,
meshColors = left_join(myMesh$it_label, myCellGraph$vertices) \%>\%
select(., GeometryArea),
meshCellcenter =  meshCellcenter) \%>\%
layout(scene = list(aspectmode = "data"))
p2

}
}
